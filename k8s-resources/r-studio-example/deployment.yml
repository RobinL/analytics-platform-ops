apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: r-studio-example
  labels:
    app: r-studio-example
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: r-studio-example
        # Force deployment in a specific AZ, to ensure the same EBS volume
        # is always used
        #
        # TODO: check if this is really necessary - can Kubernetes automatically
        # work out that a deployment and EBS vol must always be provisioned
        # in the same AZ?
        failure-domain.beta.kubernetes.io/zone: eu-west-1c
    spec:
      containers:

        - name: rstudio-auth-proxy
          image: kerin/rstudio-auth-proxy:v19
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: analyst-tools-auth
                  key: client_secret
            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: analyst-tools-auth
                  key: client_id
            - name: AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: analyst-tools-auth
                  key: domain
            - name: AUTH0_CALLBACK_URL
              valueFrom:
                secretKeyRef:
                  name: analyst-tools-auth
                  key: callback_url
            - name: COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: analyst-tools-auth
                  key: cookie_secret
            - name: SHINY_HOST
              value: localhost
            - name: SHINY_PORT
              value: "8787"
            - name: PORT
              value: "3000"
          resources:
            requests:
              cpu: 10m

        - name: r-studio-server
          image: kerin/r-studio-pro:v3
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8787
          env:
            - name: USER
              value: kerin
          resources:
            requests:
              cpu: 200m
          volumeMounts:
            - name: homes
              mountPath: "/home"

      volumes:
      - name: homes
        persistentVolumeClaim:
          claimName: nfs-homes
